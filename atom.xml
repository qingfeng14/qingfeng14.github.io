<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的日志</title>
  <subtitle>以梦为马，越骑越傻</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://2young.2simple.top/"/>
  <updated>2018-11-22T07:45:01.624Z</updated>
  <id>https://2young.2simple.top/</id>
  
  <author>
    <name>张盛豪</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Golang 性能测试, 单元测试</title>
    <link href="https://2young.2simple.top/article/golang/golang%E6%80%A7%E8%83%BD&amp;%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.html"/>
    <id>https://2young.2simple.top/article/golang/golang性能&amp;单元测试.html</id>
    <published>2018-11-22T03:36:09.000Z</published>
    <updated>2018-11-22T07:45:01.624Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;golang-测试总结&quot;&gt;Golang 测试总结&lt;/h1&gt;
&lt;h2 id=&quot;go-test的初始化以及退出前的clear-testmain&quot;&gt;&lt;code&gt;go test&lt;/code&gt;的初始化以及退出前的clear — &lt;code&gt;TestMain&lt;/code&gt;&lt;/
    
    </summary>
    
      <category term="Golang" scheme="https://2young.2simple.top/categories/Golang/"/>
    
    
      <category term="Golang" scheme="https://2young.2simple.top/tags/Golang/"/>
    
      <category term="Go" scheme="https://2young.2simple.top/tags/Go/"/>
    
      <category term="test" scheme="https://2young.2simple.top/tags/test/"/>
    
      <category term="bench" scheme="https://2young.2simple.top/tags/bench/"/>
    
      <category term="memory" scheme="https://2young.2simple.top/tags/memory/"/>
    
  </entry>
  
  <entry>
    <title>Hexo配置问题-Pandoc</title>
    <link href="https://2young.2simple.top/article/Hexo%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98-Pandoc.html"/>
    <id>https://2young.2simple.top/article/Hexo配置问题-Pandoc.html</id>
    <published>2018-11-22T02:24:30.000Z</published>
    <updated>2018-11-22T07:45:01.623Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;pandoc-的问题&quot;&gt;Pandoc 的问题&lt;/h1&gt;
&lt;h2 id=&quot;error-spawn-pandoc-enoent&quot;&gt;Error: spawn pandoc ENOENT&lt;/h2&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://2young.2simple.top/tags/Hexo/"/>
    
      <category term="Pandoc" scheme="https://2young.2simple.top/tags/Pandoc/"/>
    
      <category term="Markdown" scheme="https://2young.2simple.top/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Centrally Banked Cryptocurrencies 书面翻译</title>
    <link href="https://2young.2simple.top/article/RSCoin%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91.html"/>
    <id>https://2young.2simple.top/article/RSCoin论文翻译.html</id>
    <published>2018-01-14T12:19:00.000Z</published>
    <updated>2018-01-14T13:09:42.677Z</updated>
    
    <summary type="html">
    
      英国央行法定数字货币RSCoin 论文翻译
    
    </summary>
    
    
      <category term="区块链" scheme="https://2young.2simple.top/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="数字货币" scheme="https://2young.2simple.top/tags/%E6%95%B0%E5%AD%97%E8%B4%A7%E5%B8%81/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络管理-课程设计选题辅导</title>
    <link href="https://2young.2simple.top/article/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86-%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E9%80%89%E9%A2%98%E8%BE%85%E5%AF%BC.html"/>
    <id>https://2young.2simple.top/article/计算机网络管理-课程设计选题辅导.html</id>
    <published>2017-10-10T05:24:30.000Z</published>
    <updated>2018-11-21T09:20:48.017Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;课程选题辅导&quot;&gt;课程选题辅导&lt;/h1&gt;
&lt;h2 id=&quot;ipv4-地址空间测绘&quot;&gt;IPV4 地址空间测绘&lt;/h2&gt;
&lt;p&gt;多尺度，多维度，多状态，多视图&lt;/p&gt;
&lt;p&gt;希尔伯特曲线， IPv4 地址&lt;/p&gt;
&lt;p&gt;网络空间是几维的&lt;/p&gt;
&lt;p&gt;可做的工作：&lt;/p
    
    </summary>
    
    
      <category term="计算机网络" scheme="https://2young.2simple.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Massive-Data-Process-Lab3-K-means-Clustering-of-Netflix-Data</title>
    <link href="https://2young.2simple.top/article/Massive-Data-Process-Lab3-K-means-Clustering-of-Netflix-Data.html"/>
    <id>https://2young.2simple.top/article/Massive-Data-Process-Lab3-K-means-Clustering-of-Netflix-Data.html</id>
    <published>2017-07-09T16:00:00.000Z</published>
    <updated>2017-07-17T06:02:53.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;实验目标&quot;&gt;实验目标&lt;/h1&gt;
&lt;p&gt;使用K-means聚类方法对Netflix电影进行聚类.输入电影集合以及每部电影的用户评价列表，输出400个相关电影集合.&lt;/p&gt;
&lt;h1 id=&quot;实验步骤&quot;&gt;实验步骤&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;数据预处理，将电影评论信息进
    
    </summary>
    
      <category term="分布式处理" scheme="https://2young.2simple.top/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E5%A4%84%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>Massive-Data-Process-Lab2-PageRank-on-the-Wikipedia-Corpus</title>
    <link href="https://2young.2simple.top/article/Massive-Data-Process-Lab2-PageRank-on-the-Wikipedia-Corpus.html"/>
    <id>https://2young.2simple.top/article/Massive-Data-Process-Lab2-PageRank-on-the-Wikipedia-Corpus.html</id>
    <published>2017-07-04T16:00:00.000Z</published>
    <updated>2017-07-17T05:26:41.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;实验目标&quot;&gt;实验目标&lt;/h1&gt;
&lt;p&gt;实现PageRank，将Wikipedia转换为链接图，然后对其进行PageRank，运行多次直到结果收敛，返回所有文章的PageRank值&lt;/p&gt;
    
    </summary>
    
      <category term="分布式处理" scheme="https://2young.2simple.top/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E5%A4%84%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>Massive-Data-Process-Homework-4</title>
    <link href="https://2young.2simple.top/article/Massive-Data-Process-Homework-4.html"/>
    <id>https://2young.2simple.top/article/Massive-Data-Process-Homework-4.html</id>
    <published>2017-07-04T03:46:16.000Z</published>
    <updated>2017-07-04T15:37:26.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在Dryad论文中，有以下的查询语句，在上课的时候已经详细说明了如何将SQL语句转换成DAG1（被称为是Schema DAG，类似C++里面的class）,之后再将DAG1与具体的数据分布结合在一起，形成DAG2（被称为是Instance DAG，类似C++里面的Objec
    
    </summary>
    
      <category term="分布式处理" scheme="https://2young.2simple.top/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E5%A4%84%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>Lab1:A Simple Inverted Index</title>
    <link href="https://2young.2simple.top/article/Massive-Data-Process-Lab1-A-Simple-Inverted-Index.html"/>
    <id>https://2young.2simple.top/article/Massive-Data-Process-Lab1-A-Simple-Inverted-Index.html</id>
    <published>2017-07-01T16:00:00.000Z</published>
    <updated>2017-07-03T09:29:01.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;实验要求&quot;&gt;实验要求&lt;/h1&gt;
&lt;ol style=&quot;list-style-type: decimal&quot;&gt;
&lt;li&gt;部分单词出现特别频繁以致于其在倒排表中的是一个噪声：会影响文档的其他更有代表性的单词的特征，在本实验的第一部分，需要对莎士比亚全集文档进行单词统计以
    
    </summary>
    
      <category term="分布式处理" scheme="https://2young.2simple.top/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E5%A4%84%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>大规模数据处理-Spark</title>
    <link href="https://2young.2simple.top/article/%E5%A4%A7%E8%A7%84%E6%A8%A1%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86-Spark.html"/>
    <id>https://2young.2simple.top/article/大规模数据处理-Spark.html</id>
    <published>2017-06-30T01:04:52.000Z</published>
    <updated>2018-01-14T12:59:10.647Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;回顾&quot;&gt;回顾&lt;/h1&gt;
&lt;p&gt;hardware-&amp;gt;OS-&amp;gt;App&lt;/p&gt;
&lt;p&gt;硬件集群，网络互连-&amp;gt;DFS,Schechuler,Monitor,FT, consistent -&amp;gt; MPI,mapreduce,spark -&amp;gt; Ap
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>大规模数据处理-分布式key/value对存储：BigTable、DHT</title>
    <link href="https://2young.2simple.top/article/%E5%A4%A7%E8%A7%84%E6%A8%A1%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86-%E5%88%86%E5%B8%83%E5%BC%8Fkey-value%E5%AF%B9%E5%AD%98%E5%82%A8.html"/>
    <id>https://2young.2simple.top/article/大规模数据处理-分布式key-value对存储.html</id>
    <published>2017-06-29T13:05:59.000Z</published>
    <updated>2018-11-21T09:23:29.786Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;bigtable&quot;&gt;BigTable&lt;/h1&gt;
&lt;p&gt;Bigtable 是一个分布式的结构化数据存储系统，它被设计用来处理海量数据:通常是分布在数千台普通服 务器上的 PB 级的数据。&lt;/p&gt;
&lt;p&gt;Bigtable是一个为管理大规模结构化数据而设计的分布式存储系
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Massive-Data-Process-Homework-3</title>
    <link href="https://2young.2simple.top/article/Massive-Data-Process-Homework-3.html"/>
    <id>https://2young.2simple.top/article/Massive-Data-Process-Homework-3.html</id>
    <published>2017-06-28T16:00:00.000Z</published>
    <updated>2018-11-21T09:19:49.710Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;key-value对存储&quot;&gt;Key-Value对存储&lt;/h1&gt;
&lt;p&gt;在BigTable系统中，如果有一个TabletServer出现了错误，不能继续进行工作，这样对应的Tablet将不能够提供服务。在系统中，数据表格中的数据形式就是URLContent的Key-
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mac下Hadoop安装配置问题 waiting for AM container to be allocated, launched and register with RM.</title>
    <link href="https://2young.2simple.top/article/Mac%E4%B8%8BHadoop%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html"/>
    <id>https://2young.2simple.top/article/Mac下Hadoop安装配置教程.html</id>
    <published>2017-06-28T01:09:20.000Z</published>
    <updated>2018-08-09T01:31:24.332Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;java-安装配置&quot;&gt;JAVA 安装配置&lt;/h1&gt;
&lt;p&gt;java_home&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>大规模数据处理-MapReduce</title>
    <link href="https://2young.2simple.top/article/%E5%A4%A7%E8%A7%84%E6%A8%A1%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86-MapReduce.html"/>
    <id>https://2young.2simple.top/article/大规模数据处理-MapReduce.html</id>
    <published>2017-06-27T01:23:12.000Z</published>
    <updated>2017-07-13T16:35:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;mpi&quot;&gt;MPI&lt;/h1&gt;
&lt;p&gt;MPI编程：n台机器编号，0~n-1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;send(from. to, msg, sizeof(msg))&lt;/li&gt;
&lt;li&gt;recv()&lt;br&gt;
&lt;/li&gt;
&lt;li&gt;brodcast(from, Group
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Massive Data Process Homework 2</title>
    <link href="https://2young.2simple.top/article/Massive-Data-Process-Homework-2.html"/>
    <id>https://2young.2simple.top/article/Massive-Data-Process-Homework-2.html</id>
    <published>2017-06-26T16:00:00.000Z</published>
    <updated>2017-06-28T12:05:18.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;仔细阅读MapReduce这篇论文，回答下面的问题。&lt;/p&gt;
&lt;h1 id=&quot;分布式排序&quot;&gt;分布式排序&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在MapReduce执行的过程中，中间的shuffle过程是一个非常重要的过程。这个过程中其中一个使用的方法就是进行分布式的排序。依据你自己的理解，阐述分布式排序方法。只需要用伪代码写出在各个节点中的程序代码即可。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="分布式处理" scheme="https://2young.2simple.top/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="MapReduce" scheme="https://2young.2simple.top/tags/MapReduce/"/>
    
  </entry>
  
  <entry>
    <title>谷歌文件系统论文学习</title>
    <link href="https://2young.2simple.top/article/%E8%B0%B7%E6%AD%8C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0.html"/>
    <id>https://2young.2simple.top/article/谷歌文件系统论文学习.html</id>
    <published>2017-06-26T13:23:19.000Z</published>
    <updated>2017-06-26T14:33:53.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Google File System论文学习&lt;/p&gt;
&lt;h1 id=&quot;摘要&quot;&gt;摘要&lt;/h1&gt;
&lt;p&gt;我们设计并实现了Google GFS文件系统，一个面向大规模数据密集型应用的、可伸缩的分布式文件系统。GFS虽然运行在廉价的普遍硬件设备上，但是它依然了提供&lt;font color=&quot;red&quot;&gt;灾难冗余&lt;/font&gt;的能力，为大量客户机提供了&lt;font color=&quot;red&quot;&gt;高性能&lt;/font&gt;的服务。&lt;/p&gt;
&lt;p&gt;虽然GFS的设计目标与许多传统的分布式文件系统有很多相同之处，但是，我们的设计还是以我们对自己的应用的负载情况和技术环境的分析为基础 的，不管现在还是将来，GFS和早期的分布式文件系统的设想都有明显的不同。所以我们重新审视了传统文件系统在设计上的折衷选择，衍生出了完全不同的设计 思路。&lt;/p&gt;
&lt;p&gt;GFS完全满足了我们对存储的需求。GFS作为存储平台已经被广泛的部署在Google内部，存储我们的服务产生和处理的数据，同时还用于那些 需要大规模数据集的研究和开发工作。目前为止，最大的一个集群利用数千台机器的数千个硬盘，提供了数百TB的存储空间，同时为数百个客户机服务。&lt;/p&gt;
&lt;p&gt;在本论文中，我们展示了能够支持分布式应用的文件系统接口的扩展，讨论我们设计的许多方面，最后列出了小规模性能测试以及真实生产系统中性能相关数据。&lt;/p&gt;
    
    </summary>
    
    
      <category term="谷歌文件系统" scheme="https://2young.2simple.top/tags/%E8%B0%B7%E6%AD%8C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="大规模数据处理" scheme="https://2young.2simple.top/tags/%E5%A4%A7%E8%A7%84%E6%A8%A1%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>大规模集群数据处理-分布式文件系统</title>
    <link href="https://2young.2simple.top/article/%E5%A4%A7%E8%A7%84%E6%A8%A1%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86-%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F.html"/>
    <id>https://2young.2simple.top/article/大规模数据处理-分布式文件系统.html</id>
    <published>2017-06-26T01:03:35.000Z</published>
    <updated>2017-06-26T15:01:27.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;课程简介&quot;&gt;课程简介&lt;/h1&gt;
&lt;p&gt;课程主要内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hadoop
&lt;ul&gt;
&lt;li&gt;MapReduce&lt;/li&gt;
&lt;li&gt;Spark&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2-3人一组搭建实验环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;成绩构成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作业占20分，实验1：10分，实验2：20分，实验3：20分，最后项目：30分。 第二周到最后在教学实验室上课。&lt;/li&gt;
&lt;li&gt;Lab1：10，倒排表&lt;/li&gt;
&lt;li&gt;Lab2：20，PageRank&lt;/li&gt;
&lt;li&gt;Lab3：20，聚类&lt;/li&gt;
&lt;li&gt;Project：30， 自选题目，集中展示打分&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="基于大规模集群的海量数据处理技术" scheme="https://2young.2simple.top/tags/%E5%9F%BA%E4%BA%8E%E5%A4%A7%E8%A7%84%E6%A8%A1%E9%9B%86%E7%BE%A4%E7%9A%84%E6%B5%B7%E9%87%8F%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Massive Data Process Homework 1</title>
    <link href="https://2young.2simple.top/article/Massive-Data-Process-Homework-1.html"/>
    <id>https://2young.2simple.top/article/Massive-Data-Process-Homework-1.html</id>
    <published>2017-06-25T16:00:00.000Z</published>
    <updated>2018-11-21T09:26:02.541Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;分布式文件系统the-google-file-system仔细阅读google-file-system这篇论文回答下面的问题&quot;&gt;分布式文件系统（The Google File System）仔细阅读Google File System这篇论文，回答下面的问题。&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;简述在分布式文件系统中维护数据块一致的步骤。&lt;/li&gt;
&lt;li&gt;简述在分布式文件系统中的删除文件的过程。&lt;/li&gt;
&lt;li&gt;在分布式文件系统中，Append操作为什么被认为是defined interspersed with inconsistent，并发写为什么会出现undefined的情况。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="分布式处理" scheme="https://2young.2simple.top/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="GFS" scheme="https://2young.2simple.top/tags/GFS/"/>
    
  </entry>
  
  <entry>
    <title>系统结构第二次实验:设计实现 Tomasulo 调度算法</title>
    <link href="https://2young.2simple.top/article/Tomasulo%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95.html"/>
    <id>https://2young.2simple.top/article/Tomasulo调度算法.html</id>
    <published>2017-06-06T16:00:00.000Z</published>
    <updated>2018-11-21T09:27:10.928Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;实验原理&quot;&gt;实验原理&lt;/h1&gt;
&lt;p&gt;Tomasulo 算法以硬件方式实现了寄存器重命名，允许指令乱序执行，这是提高流水线的吞吐率和效率的一种有效方式。该算法首先出现在 IBM360/91 处理机的浮点处理部件中，后广泛应用于现代处理器设计中。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>校园搜索引擎</title>
    <link href="https://2young.2simple.top/article/%E6%A0%A1%E5%9B%AD%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E.html"/>
    <id>https://2young.2simple.top/article/校园搜索引擎.html</id>
    <published>2017-06-02T16:00:00.000Z</published>
    <updated>2018-11-21T09:21:10.838Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;内容&quot;&gt;内容&lt;/h1&gt;
&lt;p&gt;综合运用搜索引擎体系结构和核心算法方面的知识，基于开源资源搭建搜索引擎&lt;/p&gt;
    
    </summary>
    
      <category term="搜索引擎" scheme="https://2young.2simple.top/categories/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    
    
      <category term="课程" scheme="https://2young.2simple.top/tags/%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="实验" scheme="https://2young.2simple.top/tags/%E5%AE%9E%E9%AA%8C/"/>
    
      <category term="搜索引擎" scheme="https://2young.2simple.top/tags/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>密码学:设计一个安全的（没有中间人攻击）的Diffie-Hellman密钥交换协议</title>
    <link href="https://2young.2simple.top/article/%E5%AF%86%E7%A0%81%E5%AD%A6%E7%AC%AC%E4%B8%89%E6%AC%A1%E5%A4%A7%E4%BD%9C%E4%B8%9A.html"/>
    <id>https://2young.2simple.top/article/密码学第三次大作业.html</id>
    <published>2017-05-22T16:00:00.000Z</published>
    <updated>2018-11-21T09:22:57.300Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;设计一个安全的没有中间人攻击的diffie-hellman密钥交换协议&quot;&gt;设计一个安全的（没有中间人攻击）的Diffie-Hellman密钥交换协议&lt;/h1&gt;
    
    </summary>
    
    
      <category term="课程" scheme="https://2young.2simple.top/tags/%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="密码学" scheme="https://2young.2simple.top/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
</feed>
